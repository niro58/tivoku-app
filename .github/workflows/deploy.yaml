name: Deploy to Server

on:
  push:
    tags:
      - 'v*'

permissions:
  packages: write
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14'

      - name: Install dependencies
        run: npm install

  build-and-push-image:
    needs:
      - build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image

    steps:
      - name: Checkout production branch
        uses: actions/checkout@v4
        with:
          ref: production # Target branch
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout source code of the tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: source-code

      - name: Copy K8s manifests from source tag
        run: |
          echo "Copying .k8s directory from source tag commit (${{ github.ref }}) to production branch workspace..."
          rsync -av --delete source-code/.k8s/ .k8s/ # Copy contents OF source-code/.k8s INTO .k8s/

      - name: Update deployment manifest with new image tag
        run: |
          IMAGE_TAG=${{ github.sha }} # Use the full SHA of the triggering commit/tag
          IMAGE_REPO="ghcr.io/${{ github.repository }}"
          TARGET_FILE=".k8s/deployment.yaml"
          if [ -f "$TARGET_FILE" ]; then
            echo "Updating image in $TARGET_FILE to $IMAGE_REPO:$IMAGE_TAG"
            # Use a different delimiter like '#' if IMAGE_REPO might contain '/'
            sed -i "s|image: ${IMAGE_REPO}:.*|image: ${IMAGE_REPO}:${IMAGE_TAG}|" $TARGET_FILE
          else
            echo "Warning: $TARGET_FILE not found. Cannot update image tag."
          fi

      - name: Commit manifest changes and Push to production branch
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@niro.noreply.github.com'

          # Add the entire .k8s directory to catch all copied/modified files
          git add .k8s/

          # Check if there are any staged changes in the .k8s directory
          if git diff --staged --quiet -- .k8s; then
            echo "No changes detected in .k8s/ to commit."
          else
            echo "Committing changes in .k8s/..."
            git commit -m "Deploy: Update manifests and image to ${IMAGE_TAG} for tag ${{ github.ref_name }}"
            echo "Pushing changes to production branch..."
            git push origin HEAD:production
            echo "Successfully pushed updated manifests to production branch."
          fi
