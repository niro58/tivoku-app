name: Deploy to Server

on:
  push:
    tags:
      - 'v*'

permissions:
  packages: write
  contents: write

jobs:
  commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get commit hash
        id: get_commit
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14'

      - name: Install dependencies
        run: npm install

  build-and-push-image:
    needs:
      - build-and-test
      - commit-hash
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
      - commit-hash

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: production
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Update deployment manifest with new image tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_REPO="ghcr.io/${{ github.repository }}" # Construct the full image name
          sed -i "s|image: ${IMAGE_REPO}:.*|image: ${IMAGE_REPO}:${IMAGE_TAG}|" .k8s/deployment.yaml

      - name: Commit manifest changes and Push to production branch
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@niro.noreply.github.com'

          git add .k8s/deployment.yaml

          if git diff --staged --quiet; then
            echo "No changes to commit in .k8s/deployment.yaml."
          else
            git commit -m "Update image to ${IMAGE_TAG} for tag ${{ github.ref_name }}"
            git push origin HEAD:production
            echo "Successfully pushed updated manifest to production branch."
          fi
